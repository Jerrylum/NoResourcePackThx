
plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.hexomod.macro.preprocessor' version '0.9'
	id 'com.github.hexomod.replace.token.preprocessor' version '0.4'
}


// get args from gradle

String argsMinecraftVersion = System.getProperty("minecraft-version", default_minecraft_version)
String argsMinecraftCompatibilityVersion = System.getProperty("minecraft-compatibility-version", default_minecraft_compatibility_version)

String argsYarnMappings = System.getProperty("yarn-mappings", default_yarn_mappings)
String argsFabricLoaderVersion = System.getProperty("fabric-loader", default_loader_version)

String argsFabricVersion = System.getProperty("fabric", default_fabric_version)

String argsJavaVersion = System.getProperty("target-java", default_java_version)
String javaVersionVarious = argsJavaVersion == "1.8" ? "8" : argsJavaVersion

project.logger.lifecycle("No resource pack! Thank you.")
project.logger.lifecycle("Compile: " + argsMinecraftVersion + "(" + argsMinecraftCompatibilityVersion + ")" + " - " + argsFabricVersion)


sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = argsJavaVersion

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${argsMinecraftVersion}"
	mappings "net.fabricmc:yarn:${argsYarnMappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${argsFabricLoaderVersion}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${argsFabricVersion}"
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	// withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}	
}

task renameArtifacts (type: Copy) {
    from ('build/libs')
    include 'no-resource-pack-thx-' + mod_version + '.jar'
    destinationDir file('build/libs')
    rename 'no-resource-pack-thx-' + mod_version, 'no-resource-pack-thx-' + mod_version + '-MC' + argsMinecraftVersion
}

build.finalizedBy renameArtifacts

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

macroPreprocessorSettings {
	verbose = true
	inPlace = false
	remove = false

	java {
		enable = true
		inPlace = false
		remove = false
	}

	resources {
		enable = true
		inPlace = true
		remove = false
	}
	
	vars = [MOD_VERSION: version, MC_VERSION: argsMinecraftVersion, DEBUG: false]
}

replaceTokenPreprocessorSettings {
	extensions = [ ".java", ".json" ]

	java {
		enable = true
	}

	resources {
		enable = true
	}

	replace "@MOD_VERSION@": version
	replace "@MC_VERSION@": argsMinecraftVersion
	replace "@COMPATIBILITY_VERSION@": argsMinecraftCompatibilityVersion
	replace "@FABRICLOADER_VERSION@": argsFabricLoaderVersion
	replace "@JAVA_VERSION_VARIOUS@": javaVersionVarious
}
